@model WebShop.Model.ItemListViewModel
@inject DAL.Interfaces.IArtistRepository _artistRepository
@inject DAL.Interfaces.ICategoryRepository _categoryRepository
@inject DAL.Interfaces.ITagRepository _tagRepository

@{
    ViewBag.Title = "Index";

    // Fetch categories, artists, and tags from repositories
    var categories = new MultiSelectList(_categoryRepository.GetAll(), "CategoryId", "Name");
    var artists = new MultiSelectList(_artistRepository.GetAll(),"ArtistId","Name"); 
    var tags = new MultiSelectList(_tagRepository.GetAll(),"TagId","Name"); 
}

<form id="filter-form" asp-action="Index" asp-controller="Item" method="get">
    <div class="form-group">
        <label for="searchQuery">Search</label>
        <input type="text" name="SearchQuery" class="form-control" value="@Model.searchQuery" />
    </div>
    <div class="form-group">
        <label for="priceMin">Minimum Price</label>
        <input type="number" name="PriceMin" class="form-control" value="@Model.priceMin" />
    </div>
    <div class="form-group">
        <label for="priceMax">Maximum Price</label>
        <input type="number" name="PriceMax" class="form-control" value="@Model.priceMax" />
    </div>
    <div class="form-group">
        <label for="categories">Categories</label>
        @Html.ListBoxFor(m => m.selectedCategories, categories, new { @class = "form-control", multiple = "multiple" })
    </div>
    <div class="form-group">
        <label for="artists">Artists</label>
        @Html.ListBoxFor(m => m.selectedArtists, artists, new { @class = "form-control", multiple = "multiple" })
    </div>
    <div class="form-group">
        <label for="tags">Tags</label>
        @Html.ListBoxFor(m => m.selectedTags, tags, new { @class = "form-control", multiple = "multiple" })
    </div>
    <input type="hidden" name="PageNumber" id="PageNumber" value="1" />

    <button type="submit" id="filterButton" class="btn btn-primary">Filter</button>
</form>
<p>
    <a asp-action="Create">Create New</a>
</p>
<div id="items-container">
    @await Html.PartialAsync("_ItemsListPartial", Model)
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {


            $('#filterButton').on('click', function () {
                $('#PageNumber').val(1);  // Reset hidden PageNumber input to 1
            });

            function loadItems() {
                $.ajax({
                    url: '@Url.Action("Index", "Item")',
                    type: 'GET',
                    data: $('#filter-form').serialize(),
                    success: function (result) {
                        $('#items-container').html(result);
                        // Update page number in hidden field
                        var pageNumber = $('.pagination').find('.active').text();
                        $('#PageNumber').val(pageNumber);
                    }
                });
            }

            function loadPage(pageNumber) {
                $('#PageNumber').val(pageNumber);
                loadItems();
            }
        });
    </script>
}